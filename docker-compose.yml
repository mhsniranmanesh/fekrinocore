version: '3'

services:
  rabbitmq:
    image: rabbitmq:3.8.3
    container_name: rabbitmq
  postgres:
    image: kartoza/postgis:12.0
    environment: 
      - POSTGRES_USER=mohsen
      - POSTGRES_PASS=pdnejoh
      - POSTGRES_DBNAME=fekrino-db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL='amqp://rabbitmq:5672'
    volumes:
      - postgres:/var/lib/postgresql
    networks:
      - backend
    expose:
      - 5432
    ports:
      - 5432:5432
    restart: on-failure
    container_name: postgres

  api:
    build: fekrino
    image: &img api
    environment: &env
      - POSTGRES_USER=mohsen
      - POSTGRES_PASS=pdnejoh
      - POSTGRES_DBNAME=fekrino-db
    volumes:
      - ./fekrino:/code
      - static:/static
      - media:/media
      - logs:/logs
    ports:
      - 8000:8000
    depends_on:
      - postgres
    networks:
      - backend
    restart: on-failure
    entrypoint: /code/api-entrypoint.sh
    container_name: api

  celery:
    build: fekrino
    image: *img
    command: celery -A fekrinocore worker -l info
    environment: *env
    volumes:
      - ./fekrino:/code
      - static:/static
      - media:/media
      - logs:/logs
    depends_on:
      - postgres
      - rabbitmq
      - celery-beat
    restart: on-failure
    entrypoint: /code/celery-entrypoint.sh
    container_name: celery
  celery-beat:
    build: fekrino
    image: *img
    command: celery -A fekrinocore beat -l info
    environment: *env
    volumes:
      - ./fekrino:/code
      - static:/static
      - media:/media
      - logs:/logs
    depends_on:
      - postgres
      - rabbitmq
    restart: on-failure
    entrypoint: /code/celery-beat-entrypoint.sh
    container_name: celery-beat

volumes:
  postgres:
  static:
  media:
  logs:

networks:
  backend: