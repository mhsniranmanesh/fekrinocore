version: '3'

services:
  # rabbitmq:
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   image: rabbitmq:3.8.3
  #   ports:
  #     - "5672:5672"
  #   restart: on-failure
  redis-celery:
    image: redis:6.0-rc3
    restart: on-failure
    volumes:
      - "redis-celery:/data"
    container_name: redis-celery
  redis-channels:
    image: redis:6.0-rc3
    restart: on-failure
    volumes:
      - "redis-channels:/data"
    container_name: redis-channels
  postgres:
    image: kartoza/postgis:12.0
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=pdnejoh
      - POSTGRES_DBNAME=fekrino-db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL='redis://redis:6379'
    volumes:
      - ~/docker/api/dbdata:/var/lib/postgresql
    expose:
      - 5432
    ports:
      - 5432:5432
    restart: on-failure
    container_name: postgres
    hostname: postgres

  api:
    build: fekrino
    image: &img api
    environment: &env
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=pdnejoh
      - POSTGRES_DBNAME=fekrino-db
    volumes:
      - ./fekrino:/fekrino
    depends_on:
      - postgres
    restart: on-failure
    entrypoint: /fekrino/api-entrypoint.sh
    # command: sh -c "wait-for postgres:5432 && python manage.py collectstatic --no-input && python manage.py migrate && uwsgi --show-config"
    container_name: api
    hostname: api

  channels:
    build: fekrino
    image: *img
    environment: *env
    volumes:
      - ./fekrino:/fekrino
    depends_on:
      - postgres
      - redis-channels
    restart: on-failure
    entrypoint: /fekrino/channels-entrypoint.sh
    # command: sh -c "wait-for postgres:5432 && python manage.py collectstatic --no-input && python manage.py migrate && uwsgi --show-config"
    container_name: api
    hostname: channels

  celery:
    build: fekrino
    image: *img
    environment: *env
    volumes:
      - ./fekrino:/fekrino
    depends_on:
      - api
      - postgres
      - redis-celery
    restart: on-failure
    # command: sh -c "wait-for rabbitmq:5672 && wait-for api:8000 -- celery -A fekrino worker -l info"
    entrypoint: ["celery", "-A", "fekrino", "worker", "-l", "info"]
    container_name: celery
    hostname: celery
  celery_beat:
    build: fekrino
    image: *img
    environment: *env
    volumes:
      - ./fekrino:/fekrino
    depends_on:
      - api
      - postgres
      - redis-celery
    restart: on-failure
    entrypoint: ["celery", "-A", "fekrino", "beat", "-l", "info"]
    # command: sh -c "wait-for rabbitmq:5672 && wait-for api:8000 -- celery -A fekrino beat -l info"
    container_name: celery_beat
    hostname: celery_beat
    
volumes: 
  redis-celery:
  redis-channels:
